name: Build Binaries

on:
  # push:
  #  tags:
  #    - '*'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    # concurrency:
    #   group: ${{ github.workflow }}-${{ github.ref }}
    #   cancel-in-progress: true
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Set version
        id: vars
        run: |
          VERSION=$(TZ=Asia/Shanghai date +'%y%m%dT%H:%M')-$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          BIN=pcapreplay-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}$EXT
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -ldflags "-X 'main.version=${{ steps.vars.outputs.VERSION }}'" -o "$BIN" ./cmd/pcapreplay
          tar -czf dist/${BIN}.tar.gz "$BIN"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pcapreplay-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/pcapreplay-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}*.tar.gz
      - name: Upload release assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/pcapreplay-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}*.tar.gz
